{"ast":null,"code":"var _jsxFileName = \"/home/guras/eclipse-workspace/Reaktywne/L8_PR/src/components/quiz-component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // pobranie pytań z pliku JSON\n\nimport questions from '../questions.json';\nimport Question from \"./question\";\nimport Answers from \"./answers\";\nimport Results from \"./results\";\nimport Actions from \"./actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuizComponent = props => {\n  _s();\n\n  //Stworzenie niezbędnych hook;ów\n  const [currentIndex, setIndex] = useState(0);\n  const [currentQuestion, setQuestion] = useState(questions[currentIndex]);\n  const [currentPoints, setPoints] = useState(0);\n  const [allowToChoose, changePermission] = useState(true);\n  const [markedAnswer, markAnswer] = useState({\n    key: -1,\n    variant: ''\n  }); // przejście do kolejnego pytania\n\n  const handleNextQuestion = () => {\n    const nextValue = currentIndex + 1;\n\n    if (nextValue > questions.length - 1) {\n      setIndex(questions.length - 1);\n      return;\n    }\n\n    setIndex(nextValue);\n    setQuestion(questions[nextValue]);\n    changePermission(true);\n    markAnswer({\n      key: -1,\n      variant: ''\n    });\n  }; // przejście do poprzedniego pytania\n\n\n  const handlePrevQuestion = () => {\n    const prevValue = currentIndex - 1;\n\n    if (prevValue < 0) {\n      setIndex(0);\n      return;\n    }\n\n    setIndex(prevValue);\n    setQuestion(questions[prevValue]);\n    changePermission(true);\n    markAnswer({\n      key: -1,\n      variant: ''\n    });\n  }; //sprawdzenie poprawnej odpowiedzi\n\n\n  const handleCheckAnswer = (chosenOption, key) => {\n    if (!allowToChoose) {\n      return;\n    }\n\n    if (currentQuestion.correct_answer === chosenOption) {\n      const points = currentPoints + 1;\n      setPoints(points);\n      changePermission(false);\n      markAnswer({\n        key,\n        variant: 'bg-success'\n      });\n    } else {\n      changePermission(false);\n      markAnswer({\n        key,\n        variant: 'bg-danger'\n      });\n    }\n  }; // wyświetlenie zawartości\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"containter\",\n    children: [/*#__PURE__*/_jsxDEV(Question, {\n      className: \"col-12\",\n      currentQuestion: currentQuestion.question,\n      currentIndex: currentIndex + 1,\n      allQuestions: questions.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Answers, {\n      className: \"col-12\",\n      checkAnswer: handleCheckAnswer,\n      currentAnswers: currentQuestion.answers,\n      markedAnswer: markedAnswer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Results, {\n      points: currentPoints\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Actions, {\n      disablePrev: currentIndex > 0,\n      disableNext: currentIndex !== questions.length - 1,\n      prev: handlePrevQuestion,\n      next: handleNextQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 3\n  }, this);\n};\n\n_s(QuizComponent, \"qw8wKVbtCf/HA2dKHcukRfe4wHo=\");\n\n_c = QuizComponent;\nexport default QuizComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizComponent\");","map":{"version":3,"sources":["/home/guras/eclipse-workspace/Reaktywne/L8_PR/src/components/quiz-component.jsx"],"names":["React","useState","questions","Question","Answers","Results","Actions","QuizComponent","props","currentIndex","setIndex","currentQuestion","setQuestion","currentPoints","setPoints","allowToChoose","changePermission","markedAnswer","markAnswer","key","variant","handleNextQuestion","nextValue","length","handlePrevQuestion","prevValue","handleCheckAnswer","chosenOption","correct_answer","points","question","answers"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\n\n// pobranie pytań z pliku JSON\nimport questions from '../questions.json';\nimport Question from \"./question\";\nimport Answers from \"./answers\";\nimport Results from \"./results\";\nimport Actions from \"./actions\";\n\nconst QuizComponent = (props) => {\n\n\n\t//Stworzenie niezbędnych hook;ów\n\n\tconst [currentIndex, setIndex] = useState(0);\n\tconst [currentQuestion, setQuestion] = useState(questions[currentIndex]);\n\tconst [currentPoints, setPoints] = useState(0);\n\tconst [allowToChoose, changePermission] = useState(true);\n\tconst [markedAnswer, markAnswer] = useState({key: -1, variant: ''});\n\n\n\t// przejście do kolejnego pytania\n\n\tconst handleNextQuestion = () => {\n\t\tconst nextValue = currentIndex + 1;\n\t\tif (nextValue > questions.length - 1) {\n\t\t\tsetIndex(questions.length - 1);\n\t\t\treturn;\n\t\t}\n\t\tsetIndex(nextValue);\n\t\tsetQuestion(questions[nextValue]);\n\t\tchangePermission(true);\n\t\tmarkAnswer({key: -1, variant: ''});\n\t};\n\n\t// przejście do poprzedniego pytania\n\n\tconst handlePrevQuestion = () => {\n\t\tconst prevValue = currentIndex - 1;\n\t\tif (prevValue < 0) {\n\t\t\tsetIndex(0);\n\t\t\treturn;\n\t\t}\n\t\tsetIndex(prevValue);\n\t\tsetQuestion(questions[prevValue]);\n\t\tchangePermission(true);\n\t\tmarkAnswer({key: -1, variant: ''});\n\t};\n\n\n\t//sprawdzenie poprawnej odpowiedzi\n\n\n\tconst handleCheckAnswer = (chosenOption, key) => {\n\t\tif (!allowToChoose) {\n\t\t\treturn;\n\t\t}\n\t\tif (currentQuestion.correct_answer === chosenOption) {\n\t\t\tconst points = currentPoints + 1;\n\t\t\tsetPoints(points);\n\t\t\tchangePermission(false);\n\t\t\tmarkAnswer({key, variant: 'bg-success'})\n\t\t} else {\n\t\t\tchangePermission(false);\n\t\t\tmarkAnswer({key, variant: 'bg-danger'})\n\t\t}\n\t};\n\n\n\t// wyświetlenie zawartości\n\n\treturn (\n\t\t<div className=\"containter\">\n\t\t\t<Question\n\t\t\t\tclassName=\"col-12\"\n\t\t\t\tcurrentQuestion={currentQuestion.question}\n\t\t\t    currentIndex={currentIndex + 1}\n\t\t\t    allQuestions={questions.length}\n\t\t\t>\n\t\t\t</Question>\n\t\t\t<Answers className=\"col-12\"\n\t\t\t        checkAnswer={handleCheckAnswer}\n\t\t\t        currentAnswers={currentQuestion.answers}\n\t\t\t        markedAnswer={markedAnswer}\n\t\t\t/>\n\t\t\t<Results points={currentPoints}/>\n\t\t\t<Actions\n\t\t\t   disablePrev={currentIndex > 0}\n\t\t\t   disableNext={currentIndex !== questions.length - 1}\n\t\t\t   prev={handlePrevQuestion}\n\t\t\t   next={handleNextQuestion}\n\t\t\t/>\n\t\t</div>\n\t)\n};\n\nexport default QuizComponent;\n\n"]},"metadata":{},"sourceType":"module"}