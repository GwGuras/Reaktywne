{"ast":null,"code":"var _jsxFileName = \"/home/guras/eclipse-workspace/Reaktywne/L8_PR/src/components/QuizComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // pobranie pytań z pliku JSON\n\nimport questions from '../questions.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuizComponent = props => {\n  _s();\n\n  //Stworzenie niezbędnych hook;ów\n  const [currentIndex, setIndex] = useState(0);\n  const [currentQuestion, setQuestion] = useState(questions[currentIndex]);\n  const [currentPoints, setPoints] = useState(0);\n  const [allowToChoose, changePermission] = useState(true);\n  const [markedAnswer, markAnswer] = useState({\n    key: -1,\n    variant: ''\n  }); // przejście do kolejnego pytania\n\n  const handleNextQuestion = () => {\n    const nextValue = currentIndex + 1;\n\n    if (nextValue > questions.length - 1) {\n      setIndex(questions.length - 1);\n      return;\n    }\n\n    setIndex(nextValue);\n    setQuestion(questions[nextValue]);\n    changePermission(true);\n    markAnswer({\n      key: -1,\n      variant: ''\n    });\n  }; // przejście do poprzedniego pytania\n\n\n  const handlePrevQuestion = () => {\n    const prevValue = currentIndex - 1;\n\n    if (prevValue < 0) {\n      setIndex(0);\n      return;\n    }\n\n    setIndex(prevValue);\n    setQuestion(questions[prevValue]);\n    changePermission(true);\n    markAnswer({\n      key: -1,\n      variant: ''\n    });\n  }; //sprawdzenie poprawnej odpowiedzi\n\n\n  const handleCheckAnswer = (chosenOption, key) => {\n    if (!allowToChoose) {\n      return;\n    }\n\n    if (currentQuestion.correct_answer === chosenOption) {\n      const points = currentPoints + 1;\n      setPoints(points);\n      changePermission(false);\n      markAnswer({\n        key,\n        variant: 'bg-success'\n      });\n    } else {\n      changePermission(false);\n      markAnswer({\n        key,\n        variant: 'bg-danger'\n      });\n    }\n  }; // wyświetlenie zawartości\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"containter\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 3\n  }, this);\n};\n\n_s(QuizComponent, \"qw8wKVbtCf/HA2dKHcukRfe4wHo=\");\n\n_c = QuizComponent;\nexport default QuizComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizComponent\");","map":{"version":3,"sources":["/home/guras/eclipse-workspace/Reaktywne/L8_PR/src/components/QuizComponent.jsx"],"names":["React","useState","questions","QuizComponent","props","currentIndex","setIndex","currentQuestion","setQuestion","currentPoints","setPoints","allowToChoose","changePermission","markedAnswer","markAnswer","key","variant","handleNextQuestion","nextValue","length","handlePrevQuestion","prevValue","handleCheckAnswer","chosenOption","correct_answer","points"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,mBAAtB;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAGhC;AAEA,QAAM,CAACC,YAAD,EAAeC,QAAf,IAA2BL,QAAQ,CAAC,CAAD,CAAzC;AACA,QAAM,CAACM,eAAD,EAAkBC,WAAlB,IAAiCP,QAAQ,CAACC,SAAS,CAACG,YAAD,CAAV,CAA/C;AACA,QAAM,CAACI,aAAD,EAAgBC,SAAhB,IAA6BT,QAAQ,CAAC,CAAD,CAA3C;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM,CAACY,YAAD,EAAeC,UAAf,IAA6Bb,QAAQ,CAAC;AAACc,IAAAA,GAAG,EAAE,CAAC,CAAP;AAAUC,IAAAA,OAAO,EAAE;AAAnB,GAAD,CAA3C,CATgC,CAYhC;;AAEA,QAAMC,kBAAkB,GAAG,MAAM;AAChC,UAAMC,SAAS,GAAGb,YAAY,GAAG,CAAjC;;AACA,QAAIa,SAAS,GAAGhB,SAAS,CAACiB,MAAV,GAAmB,CAAnC,EAAsC;AACrCb,MAAAA,QAAQ,CAACJ,SAAS,CAACiB,MAAV,GAAmB,CAApB,CAAR;AACA;AACA;;AACDb,IAAAA,QAAQ,CAACY,SAAD,CAAR;AACAV,IAAAA,WAAW,CAACN,SAAS,CAACgB,SAAD,CAAV,CAAX;AACAN,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAE,IAAAA,UAAU,CAAC;AAACC,MAAAA,GAAG,EAAE,CAAC,CAAP;AAAUC,MAAAA,OAAO,EAAE;AAAnB,KAAD,CAAV;AACA,GAVD,CAdgC,CA0BhC;;;AAEA,QAAMI,kBAAkB,GAAG,MAAM;AAChC,UAAMC,SAAS,GAAGhB,YAAY,GAAG,CAAjC;;AACA,QAAIgB,SAAS,GAAG,CAAhB,EAAmB;AAClBf,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACA;AACA;;AACDA,IAAAA,QAAQ,CAACe,SAAD,CAAR;AACAb,IAAAA,WAAW,CAACN,SAAS,CAACmB,SAAD,CAAV,CAAX;AACAT,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAE,IAAAA,UAAU,CAAC;AAACC,MAAAA,GAAG,EAAE,CAAC,CAAP;AAAUC,MAAAA,OAAO,EAAE;AAAnB,KAAD,CAAV;AACA,GAVD,CA5BgC,CAyChC;;;AAGA,QAAMM,iBAAiB,GAAG,CAACC,YAAD,EAAeR,GAAf,KAAuB;AAChD,QAAI,CAACJ,aAAL,EAAoB;AACnB;AACA;;AACD,QAAIJ,eAAe,CAACiB,cAAhB,KAAmCD,YAAvC,EAAqD;AACpD,YAAME,MAAM,GAAGhB,aAAa,GAAG,CAA/B;AACAC,MAAAA,SAAS,CAACe,MAAD,CAAT;AACAb,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAE,MAAAA,UAAU,CAAC;AAACC,QAAAA,GAAD;AAAMC,QAAAA,OAAO,EAAE;AAAf,OAAD,CAAV;AACA,KALD,MAKO;AACNJ,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAE,MAAAA,UAAU,CAAC;AAACC,QAAAA,GAAD;AAAMC,QAAAA,OAAO,EAAE;AAAf,OAAD,CAAV;AACA;AACD,GAbD,CA5CgC,CA4DhC;;;AAEA,sBACC;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CAnED;;GAAMb,a;;KAAAA,a;AAqEN,eAAeA,aAAf","sourcesContent":["import React, {useState} from 'react';\n\n// pobranie pytań z pliku JSON\nimport questions from '../questions.json';\n\nconst QuizComponent = (props) => {\n\n\n\t//Stworzenie niezbędnych hook;ów\n\n\tconst [currentIndex, setIndex] = useState(0);\n\tconst [currentQuestion, setQuestion] = useState(questions[currentIndex]);\n\tconst [currentPoints, setPoints] = useState(0);\n\tconst [allowToChoose, changePermission] = useState(true);\n\tconst [markedAnswer, markAnswer] = useState({key: -1, variant: ''});\n\n\n\t// przejście do kolejnego pytania\n\n\tconst handleNextQuestion = () => {\n\t\tconst nextValue = currentIndex + 1;\n\t\tif (nextValue > questions.length - 1) {\n\t\t\tsetIndex(questions.length - 1);\n\t\t\treturn;\n\t\t}\n\t\tsetIndex(nextValue);\n\t\tsetQuestion(questions[nextValue]);\n\t\tchangePermission(true);\n\t\tmarkAnswer({key: -1, variant: ''});\n\t};\n\n\t// przejście do poprzedniego pytania\n\n\tconst handlePrevQuestion = () => {\n\t\tconst prevValue = currentIndex - 1;\n\t\tif (prevValue < 0) {\n\t\t\tsetIndex(0);\n\t\t\treturn;\n\t\t}\n\t\tsetIndex(prevValue);\n\t\tsetQuestion(questions[prevValue]);\n\t\tchangePermission(true);\n\t\tmarkAnswer({key: -1, variant: ''});\n\t};\n\n\n\t//sprawdzenie poprawnej odpowiedzi\n\n\n\tconst handleCheckAnswer = (chosenOption, key) => {\n\t\tif (!allowToChoose) {\n\t\t\treturn;\n\t\t}\n\t\tif (currentQuestion.correct_answer === chosenOption) {\n\t\t\tconst points = currentPoints + 1;\n\t\t\tsetPoints(points);\n\t\t\tchangePermission(false);\n\t\t\tmarkAnswer({key, variant: 'bg-success'})\n\t\t} else {\n\t\t\tchangePermission(false);\n\t\t\tmarkAnswer({key, variant: 'bg-danger'})\n\t\t}\n\t};\n\n\n\t// wyświetlenie zawartości\n\n\treturn (\n\t\t<div className=\"containter\">\n\t\t<p>Quiz</p>\n\t\t</div>\n\t)\n};\n\nexport default QuizComponent;\n\n"]},"metadata":{},"sourceType":"module"}